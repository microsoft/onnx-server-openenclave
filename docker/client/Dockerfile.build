# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

FROM ubuntu:18.04

ARG OE_VERSION=v0.10.0
ARG BUILD_TYPE=Release

RUN echo "APT::Acquire::Retries \"5\";" | tee /etc/apt/apt.conf.d/80-retries

# zlib needed by protoc in ONNX RT
# python3-dev needed by pybind11 in confmsg
# python3-pip, python3-setuptools, python3-wheel needed to create wheel
RUN apt-get update && apt-get -y --no-install-recommends install \
    ca-certificates software-properties-common curl git wget gnupg \
    build-essential clang \
    libssl-dev zlib1g-dev \
    python3-dev python3-pip python3-setuptools python3-wheel

ENV CC=clang
ENV CXX=clang++

WORKDIR /tmp

# CMake
RUN curl --retry 5 --retry-connrefused https://cmake.org/files/v3.15/cmake-3.15.7-Linux-x86_64.sh -o cmake.sh && \
    chmod +x cmake.sh && \
    ./cmake.sh --prefix=/usr --exclude-subdir --skip-license && \
    rm cmake.sh

# Ninja
RUN curl --retry 5 --retry-connrefused -L https://github.com/ninja-build/ninja/archive/v1.10.0.tar.gz | tar xz && \
    cd ninja-* && \
    mkdir build && cd build && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && \
    make -j$(nproc) && \
    cp ninja /usr/bin && \
    cd ../.. && rm -rf ninja*/

# Open Enclave requires libsgx-enclave-common for building, even in host-only mode.
RUN curl --retry 5 --retry-connrefused https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - && \
    apt-add-repository https://download.01.org/intel-sgx/sgx_repo/ubuntu && \
    apt-get update && apt-get -y --no-install-recommends install \
    libsgx-enclave-common \
    libsgx-enclave-common-dev

# Open Enclave build dependencies
RUN apt-get -y --no-install-recommends install \
    python automake autoconf libtool

# Open Enclave (used for host-side quote verification)
RUN git clone -b ${OE_VERSION} --recursive --depth 1 https://github.com/openenclave/openenclave && \
    cd openenclave && \
    mkdir build && cd build && \
    cmake -GNinja \
      -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
      -DCMAKE_INSTALL_PREFIX=/opt/openenclave \
      -DHAS_QUOTE_PROVIDER=OFF \
      -DENABLE_REFMAN=OFF .. && \
    cmake --build . --target install && \
    cd ../.. && rm -rf openenclave/

RUN curl --retry 5 --retry-connrefused -L https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh && \
    bash ./miniconda.sh -b -p /usr/share/miniconda && \
    rm miniconda.sh

ENV PATH=/usr/share/miniconda/bin:${PATH}

ARG PYTHON_VERSION=3.7
RUN conda install python=${PYTHON_VERSION}
